searchState.loadedDescShard("accounting_core", 0, "Accounting Core\nLedger module containing account management and …\nReconciliation module for bank statements and payment …\nTax calculation module\nTraits for storage abstraction and extensibility\nCore types and data structures for the accounting system\nUtility modules\nAccount management functionality\nMain ledger orchestrator that coordinates accounts and …\nTransaction processing and management\nAccount manager for handling chart of accounts operations\nChart of accounts implementation\nCreate a new account\nDelete an account\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet an account by ID\nGet an account by ID, returning an error if not found\nGet account balance\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList all accounts\nList accounts by type\nCreate a new account manager\nCreate a new chart of accounts\nUpdate an account\nUtility functions for working with accounts\nCreate a new account manager with custom validator\nCreate a standard chart of accounts for a small business\nMain ledger system that orchestrates all accounting …\nReport on ledger integrity and validation\nCreate a new account\nDelete an account\nDelete a transaction\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerate a balance sheet as of a specific date\nCreate a basic cash flow statement\nGenerate an income statement for a date range\nGet an account by ID\nGet account balance as of a specific date\nGet account balances grouped by type\nGet transactions for a specific account\nGet a transaction by ID\nGet all transactions within a date range\nGet trial balance as of a specific date\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList all accounts\nList accounts by type\nCreate a new ledger with the given storage backend\nRecord a new transaction\nSetup a standard chart of accounts for small business\nUpdate an account\nUpdate a transaction\nValidate the integrity of the ledger\nCreate a new ledger with custom validators\nParameters for creating a bill payment with GST\nParameters for creating an invoice with GST\nTransaction builder for creating complex transactions\nTransaction manager for handling transaction operations\nBuild the transaction\nAdd a credit entry\nAdd a debit entry\nDelete a transaction (reverses its effects on account …\nAdd a custom entry\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet transactions for a specific account\nGet a transaction by ID\nGet a transaction by ID, returning an error if not found\nGet all transactions within a date range\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdd metadata to the transaction\nCreate a new transaction manager\nCreate a new transaction builder\nCommon transaction patterns\nRecord a new transaction\nSet the reference for the transaction\nUpdate a transaction (requires reversing old entries and …\nCreate a new transaction manager with custom validator\nCreate an asset purchase transaction (debit asset, credit …\nCreate a bill payment with GST\nCreate a simple payment transaction (debit expense, credit …\nCreate an invoice with GST\nCreate a loan transaction\nCreate owner investment transaction\nCreate a sales transaction (debit cash/receivables, credit …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGST (Goods and Services Tax) calculation engine for Indian …\nEssential items (food, medicines, etc.) - 0%\nDetailed GST calculation breakdown\nGST calculation engine\nStandard GST rates for different categories of goods and …\nGST-related errors\nComplete GST invoice calculation\nInvoice line item with GST calculation\nGST rate structure for Indian taxation\nHigher rate items - 18%\nLuxury/Sin goods - 28%\nReduced rate items - 5%\nStandard rate items - 12%\nAdd a line item to the invoice\nBase amount (before GST)\nCalculate GST amounts from base amount and GST rate\nCalculate GST for a product using category rates\nCalculate GST for a product using custom rates\nCalculate GST with explicit rate\nCalculated CGST amount\nCGST rate percentage (Central GST)\nItem description\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGrand total including GST\nGST calculation for this line\nGST rate used for calculation\nCalculated IGST amount\nIGST rate percentage (Integrated GST)\nCreate a new GST rate with inter-state rates (IGST)\nCreate inter-state GST rate for this category\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new GST rate with intra-state rates (CGST + SGST)\nCreate intra-state GST rate for this category\nInvoice line items\nLine total before GST\nLine total including GST\nCreate a new GST calculator\nCreate a new line item with GST calculation\nCreate a new GST invoice from line items\nQuantity\nGet the standard GST rate for this category\nCalculate base amount from total amount (reverse …\nReverse calculate base amount from total\nSet a custom GST rate for a specific product/service\nCalculated SGST amount\nSGST rate percentage (State GST)\nTotal amount including GST\nTotal before GST\nTotal CGST amount\nTotal GST amount\nTotal GST amount (CGST + SGST + IGST)\nTotal IGST amount\nTotal GST rate percentage (e.g., 18.0 for 18%)\nTotal SGST amount\nUnit price (before GST)\nValidate that the GST rate structure is correct\nTrait for implementing custom account validation rules\nBalance Sheet structure\nCash Flow Item\nCash Flow Statement structure\nTrait for implementing custom chart of accounts structures\nDefault account validator with basic rules\nDefault transaction validator with basic double-entry rules\nIncome Statement structure\nStorage abstraction for the ledger system\nTrait for report generation\nTrait for implementing custom transaction validation rules\nAdd a new account to the chart\nDelete an account (if no transactions reference it)\nDelete a transaction and reverse its effects on account …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerate a balance sheet as of a specific date\nGenerate a cash flow statement for a date range\nGenerate an income statement for a date range\nGet an account by ID\nGet account balance as of a specific date\nGet all account balances grouped by account type\nGet the full path to an account (for hierarchical display)\nList transactions for a specific account\nGet the full chart of accounts as a hierarchical structure\nGet all child accounts of a parent account\nGet a transaction by ID\nList all transactions within a date range\nGet trial balance as of a specific date\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList all accounts, optionally filtered by type\nSave an account to storage\nSave a transaction to storage\nUpdate an account\nUpdate a transaction\nValidate an account before saving\nValidate account deletion (e.g., check for existing …\nValidate that all referenced accounts exist\nValidate a transaction before saving\nCore account structure\nAccount balance information for trial balance\nAccount types following standard accounting principles\nAssets - what the business owns (Cash, Inventory, …\nCredit entry - increases Liabilities, Equity, and Income, …\nDebit entry - increases Assets and Expenses, decreases …\nIndividual entry within a transaction\nTypes of entries in double-entry bookkeeping\nEquity - owner’s interest in the business (Capital, …\nContains the error value\nExpenses - costs incurred by the business\nIncome/Revenue - money earned by the business\nErrors that can occur in the ledger system\nResult type for ledger operations\nLiabilities - what the business owes (Loans, Accounts …\nContains the success value\nComplete transaction with multiple entries\nTrial Balance - snapshot of all account balances at a …\nAccount information\nAccount being affected\nType of account (Asset, Liability, etc.)\nAdd an entry to the transaction\nAmount of the entry\nUpdate the account balance based on an entry\nDate of the trial balance\nCurrent balance of the account\nGet the balance amount regardless of debit/credit\nAccount balances grouped by type\nWhen the account was created\nWhen the transaction was created\nCreate a credit entry\nCredit balance (if applicable)\nDate when the transaction occurred\nCreate a debit entry\nDebit balance (if applicable)\nOptional description for this specific entry\nDescription of the transaction\nList of entries that make up this transaction\nType of entry (Debit or Credit)\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUnique identifier for the account\nUnique identifier for the transaction\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if the transaction is balanced (debits = credits)\nWhether the trial balance is balanced\nAdditional metadata\nAdditional metadata\nHuman-readable account name\nCreate a new account\nCreate a new entry\nCreate a new transaction\nReturns the normal balance type for this account type …\nOptional parent account for hierarchical chart of accounts\nOptional reference number (invoice number, check number, …\nCalculate total credits\nTotal credits across all accounts\nCalculate total debits\nTotal debits across all accounts\nWhen the account was last updated\nWhen the transaction was last updated\nValidate the transaction\nIn-memory storage implementation for testing\nValidation utilities\nIn-memory storage implementation for testing and …\nClear all data (useful for testing)\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new memory storage instance\nEnhanced account validator with detailed checks\nEnhanced transaction validator with detailed checks\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nValidate that an account ID is valid\nValidate that an account name is valid\nValidate that an amount is positive\nValidate that a transaction description is valid")